Go is a compiled language, which means that Go source code is translated into machine language for the specific processor you want to run it on: an ARM chip, an X86_64, or whatever.

This makes Go programs in general much faster than the equivalent programs in Python, which is an interpreted language, meaning that it's not executed directly on the CPU. Instead, another program, called the interpreter, reads Python source code and translates it on-the-fly into machine instructions.

why go?
* In-demand ,used by high profile company
* Simplistic and easy to understand by design
* Built-in dependency management (package registry)
* familiar C-style syntax

Technical features:
* First class concurrency primitives (perfect for backend programming)
* Type safety enforced by compiler
* Memory safe ; no use-after-free bugs (garbage collected , no need to manage memory)
* Compiles to machine code for very fast speeds
